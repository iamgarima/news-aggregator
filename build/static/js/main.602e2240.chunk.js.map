{"version":3,"sources":["components/Weather-card/weather-card.module.css","components/Header/header.module.css","components/Story-card/story-card.module.css","components/Topics-bar/topics-bar.module.css","components/Story-layouts/Rich-layout/rich-layout.module.css","components/Header/svgs/weather.svg","components/Separator/separator.module.css","components/Story-layouts/List-layout/list-layout.module.css","reducers/geolocation.js","constants.js","reducers/language.js","reducers/topic.js","reducers/page-type.js","reducers/index.js","store.js","components/Header/language-options.js","components/Header/header.js","actions/language.js","utils/utils.js","components/Separator/separator.js","components/Story-card/story-card.js","components/Story-layouts/List-layout/list-layout.js","hooks/use-query-params.js","actions/page-type.js","components/Story-layouts/List-layout/list-layout-container.js","components/Story-layouts/Rich-layout/rich-layout.js","actions/geolocation.js","components/Weather-card/weather-card.js","components/Story-layouts/Rich-layout/rich-layout-container.js","components/Topics-bar/topics-list.js","components/Topics-bar/topics-bar.js","actions/topic.js","components/Home/home.js","components/App/app.js","index.js"],"names":["module","exports","geolocationReducer","state","action","type","payload","initVal","code","name","languageReducer","topicReducer","pageTypeReducer","rootReducer","combineReducers","geolocation","language","topic","pageType","configureStore","initialState","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","languageOptions","value","label","Header","useState","inputVal","updateInputVal","langOption","updateLangOption","useSelector","dispatch","useDispatch","className","styles","headerWrapper","homeIconWrapper","to","homeIcon","fill","xmlns","viewBox","width","height","d","searchWrapper","inputBox","onChange","e","target","searchBtn","selectWrapper","selectedOption","options","isSearchable","status","src","weather","alt","title","error","message","getErrorMessage","weatherIcon","loadData","api","a","fetch","json","data","errors","Error","console","log","loadWeatherData","lat","lon","weatherApi","config","loadForecastData","forecastApi","forecast","getClosest","num","closestNum","Separator","id","separator","getSeparator","StoryCard","story","opts","css","description","url","image","publishedAt","source","srcName","srcUrl","showImg","showDescription","align","wrapper","href","rel","sourceWrapper","publishTime","date","ListLayout","storiesList","map","index","key","useQueryParams","URLSearchParams","useLocation","search","updatePageType","ListLayoutContainer","newsData","updateNewsData","query","get","useEffect","searchNewsData","getData","articles","RichLayout","SlotCardComponent","isGeolocationSuccess","updatedStoriesList","slice","slotWrapper","updateGeolocationStatus","WeatherCard","coord","updateCoord","weatherData","updateWeatherData","forecastData","updateForecastData","geoAccess","updateGeoAccessStatus","successCallback","position","coords","latitude","longitude","errorCallback","navigator","getCurrentPosition","forecastItem","today","iconId","main","icon","tempMin","temp_min","tempMax","temp_max","dt","dt_txt","day","daysList","dayCode","Date","getDay","itemWrapper","itemDate","itemTemp","parseInt","Object","keys","length","temp","country","sys","currentDateObj","currentHour","getHours","filteredForecastList","forecastList","filter","filterForecastList","list","place","toDateString","forecastWrapper","RichLayoutContainer","topNewsData","topicsList","TopicsBar","activeTopic","updateActiveTopic","clickHandler","topicItem","topicLabel","replace","topicBtn","active","onClick","topicsWrapper","Home","App","path","component","store","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.602e2240.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"weather-card_wrapper__3mAzB\",\"place\":\"weather-card_place__1Bp0H\",\"date\":\"weather-card_date__3rtvN\",\"forecastWrapper\":\"weather-card_forecastWrapper__1d_Ww\",\"status\":\"weather-card_status__3eZis\",\"temp\":\"weather-card_temp__3qcb2\",\"itemWrapper\":\"weather-card_itemWrapper__3dKwn\",\"itemDate\":\"weather-card_itemDate__1dP0T\",\"itemTemp\":\"weather-card_itemTemp__2IFO1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"header_headerWrapper__623Fa\",\"searchWrapper\":\"header_searchWrapper__1BPMT\",\"inputBox\":\"header_inputBox__2juyv\",\"searchBtn\":\"header_searchBtn__1b05a\",\"selectWrapper\":\"header_selectWrapper__2ODM7\",\"homeIconWrapper\":\"header_homeIconWrapper__10L12\",\"weatherIcon\":\"header_weatherIcon__3lu5t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"story-card_wrapper__1OMyg\",\"left\":\"story-card_left__2bIG3\",\"center\":\"story-card_center__1do5Z\",\"right\":\"story-card_right__2TNom\",\"sourceWrapper\":\"story-card_sourceWrapper__3OS7b\",\"title\":\"story-card_title__3klm3\",\"description\":\"story-card_description__mvDBL\",\"srcName\":\"story-card_srcName__3gX58\",\"publishTime\":\"story-card_publishTime__1_8vu\",\"separator\":\"story-card_separator__1ZRe_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topicsWrapper\":\"topics-bar_topicsWrapper__KQAO4\",\"topicBtn\":\"topics-bar_topicBtn__38eTz\",\"active\":\"topics-bar_active__3CK6z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"rich-layout_wrapper__2MCW-\",\"slotWrapper\":\"rich-layout_slotWrapper__1Xdvl\"};","module.exports = __webpack_public_path__ + \"static/media/weather.ba215a44.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"separator\":\"separator_separator__2bUZT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"list-layout_wrapper__3lkeZ\"};","import { GEOLOCATION_UPDATE_STATUS } from \"../constants\";\n\nconst geolocationReducer = (state = {}, action) => {\n  switch(action.type) {\n    case GEOLOCATION_UPDATE_STATUS: \n      return { ...state, ...action.payload };\n    default: \n      return state;\n  };\n};\n\nexport default geolocationReducer;","// Magic Constants\nexport const FORECAST_LIMIT = 5; // Filter limit for given forecast list\nexport const FORECAST_DEFAULT_HOUR = 9; // Default hour to filter from a day's forecast data \n\n\n// Action type constants\nexport const GEOLOCATION_UPDATE_STATUS = \"GEOLOCATION.UPDATE_STATUS\";\nexport const UPDATE_LANGUAGE = \"UPDATE_LANGUAGE\";\nexport const UPDATE_TOPIC = \"UPDATE_TOPIC\";\nexport const UPDATE_PAGE_TYPE = \"UPDATE_PAGE_TYPE\";","import { UPDATE_LANGUAGE } from \"../constants\";\n\nconst initVal = { \n  code: \"en\",\n  name: \"English\"\n};\n\nconst languageReducer = (state = initVal, action) => {\n  switch(action.type) {\n    case UPDATE_LANGUAGE:\n      return action.payload;\n    default:\n      return state;\n  };\n};\n\nexport default languageReducer;","import { UPDATE_TOPIC } from \"../constants\";\n\nconst topicReducer = (state = 'top-news', action) => {\n  switch(action.type) {\n    case UPDATE_TOPIC:\n      return action.payload;\n    default:\n      return state;\n  };\n};\n\nexport default topicReducer;","import { UPDATE_PAGE_TYPE } from \"../constants\";\n\nconst pageTypeReducer = (state = \"\", action) => {\n  switch(action.type) {\n    case UPDATE_PAGE_TYPE:\n      return action.payload;\n    default:\n      return state;\n  };\n};\n\nexport default pageTypeReducer;","import { combineReducers } from 'redux';\nimport geolocationReducer from './geolocation';\nimport languageReducer from './language';\nimport topicReducer from './topic';\nimport pageTypeReducer from './page-type';\n\nconst rootReducer = combineReducers({\n  geolocation: geolocationReducer,\n  language: languageReducer,\n  topic: topicReducer,\n  pageType: pageTypeReducer\n});\n\nexport default rootReducer;","import { createStore } from 'redux'\nimport rootReducer from './reducers';\n\n// Create and return redux store initialised with passed state along with Redux devtools support \nconst configureStore = (initialState = {}) => {\n  return createStore(\n    rootReducer,\n    initialState,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n};\n\nexport default configureStore;","// List of supported languages\nconst languageOptions = [\n  { value: \"af\", label: \"Afrikaans\" },\n  { value: \"sq\", label: \"Albanian\" },\n  { value: \"sm\", label: \"Amharic\" },\n  { value: \"az\", label: \"Azerbaijani\" },\n  { value: \"eu\", label: \"Basque\" },\n  { value: \"be\", label: \"Belarusian\" },\n  { value: \"bn\", label: \"Bengali\" },\n  { value: \"bh\", label: \"Bihari\" },\n  { value: \"bs\", label: \"Bosnian\" },\n  { value: \"bg\", label: \"Bulgarian\" },\n  { value: \"ca\", label: \"Catalan\" },\n  { value: \"hr\", label: \"Croatian\" },\n  { value: \"cs\", label: \"Czech\" },\n  { value: \"da\", label: \"Danish\" },\n  { value: \"nl\", label: \"Dutch\" },\n  { value: \"en\", label: \"English\" },\n  { value: \"eo\", label: \"Esperanto\" },\n  { value: \"et\", label: \"Estonian\" },\n  { value: \"fo\", label: \"Faroese\" },\n  { value: \"fi\", label: \"Finnish\" },\n  { value: \"fr\", label: \"French\" },\n  { value: \"fy\", label: \"Frisian\" },\n  { value: \"gl\", label: \"Galician\" },\n  { value: \"ka\", label: \"Georgian\" },\n  { value: \"de\", label: \"German\" },\n  { value: \"el\", label: \"Greek\" },\n  { value: \"iw\", label: \"Hebrew\" },\n  { value: \"hi\", label: \"Hindi\" },\n  { value: \"hu\", label: \"Hungarian\" },\n  { value: \"is\", label: \"Icelandic\" },\n  { value: \"id\", label: \"Indonesian\" },\n  { value: \"ia\", label: \"Interlingua\" },\n  { value: \"ga\", label: \"Irish\" },\n  { value: \"it\", label: \"Italian\" },\n  { value: \"ja\", label: \"Japanese\" },\n  { value: \"jw\", label: \"Javanese\" },\n  { value: \"kn\", label: \"Kannada\" },\n  { value: \"ko\", label: \"Korean\" },\n  { value: \"la\", label: \"Latin\" },\n  { value: \"lv\", label: \"Latvian\" },\n  { value: \"lt\", label: \"Lithuanian\" },\n  { value: \"mk\", label: \"Macedonian\" },\n  { value: \"ms\", label: \"Malay\" },\n  { value: \"ml\", label: \"Malayalam\" },\n  { value: \"mt\", label: \"Maltese\" },\n  { value: \"mr\", label: \"Marathi\" },\n  { value: \"ne\", label: \"Nepali\" },\n  { value: \"no\", label: \"Norwegian\" },\n  { value: \"nn\", label: \"Norwegian (Nynorsk)\" },\n  { value: \"oc\", label: \"Occitan\" },\n  { value: \"fa\", label: \"Persian\" },\n  { value: \"pl\", label: \"Polish\" },\n  { value: \"pt-BR\", label: \"Portuguese (Brazil)\" },\n  { value: \"pt-PT\", label: \"Portuguese (Portugal)\" },\n  { value: \"pa\", label: \"Punjabi\" },\n  { value: \"ro\", label: \"Romanian\" },\n  { value: \"ru\", label: \"Russian\" },\n  { value: \"gd\", label: \"Scots Gaelic\" },\n  { value: \"sr\", label: \"Serbian\" },\n  { value: \"si\", label: \"Sinhalese\" },\n  { value: \"sk\", label: \"Slovak\" },\n  { value: \"sl\", label: \"Slovenian\" },\n  { value: \"es\", label: \"Spanish\" },\n  { value: \"su\", label: \"Sudanese\" },\n  { value: \"sw\", label: \"Swahili\" },\n  { value: \"sv\", label: \"Swedish\" },\n  { value: \"tl\", label: \"Tagalog\" },\n  { value: \"ta\", label: \"Tamil\" },\n  { value: \"te\", label: \"Telugu\" },\n  { value: \"th\", label: \"Thai\" },\n  { value: \"ti\", label: \"Tigrinya\" },\n  { value: \"tr\", label: \"Turkish\" },\n  { value: \"uk\", label: \"Ukrainian\" },\n  { value: \"ur\", label: \"Urdu\" },\n  { value: \"uz\", label: \"Uzbek\" },\n  { value: \"vi\", label: \"Vietnamese\" },\n  { value: \"cy\", label: \"Welsh\" },\n  { value: \"xh\", label: \"Xhosa\" },\n  { value: \"zu\", label: \"Zulu\" },\n];\n\nexport default languageOptions;","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Select from 'react-select';\nimport languageOptions from './language-options';\nimport { updateLanguage } from '../../actions/language';\nimport styles from './header.module.css';\nimport weather from './svgs/weather.svg';\n\n/* Renders a Header bar which includes\n * - home icon to navigate to home page when on search page\n * - search bar to get top news based on input query\n * - dropdown to choose news language\n * - weather icon on geolocation error for user information\n */\nconst Header = () => {\n  const [inputVal, updateInputVal] = useState(\"\");\n  const [langOption, updateLangOption] = useState({ value: \"en\", label: \"English\" });\n  const pageType = useSelector(state => state.pageType);\n  const { geolocation = {} } = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const selectHandler = selectedOption => {\n    const { value, label } = selectedOption;\n    updateLangOption(selectedOption);\n    dispatch(updateLanguage({ code: value, name: label }));\n  };\n\n  const getErrorMessage = (geolocation = {}) => {\n    return (geolocation.status === \"error\" && geolocation.error.code === 0) ? `Sorry! Can't see weather details? ${geolocation.error.message}` : \"To see weather details, please make sure your geolocation is enabled and then refresh the page.\";\n  };\n\n  return <div className={styles.headerWrapper}>\n      {pageType === \"search-page\" && <div className={styles.homeIconWrapper}>\n        <Link to=\"/\" className={styles.homeIcon}>\n            <svg fill=\"#000000\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"32px\" height=\"32px\"><path d=\"M 12 2.0996094 L 1 12 L 4 12 L 4 21 L 11 21 L 11 15 L 13 15 L 13 21 L 20 21 L 20 12 L 23 12 L 12 2.0996094 z M 12 4.7910156 L 18 10.191406 L 18 11 L 18 19 L 15 19 L 15 13 L 9 13 L 9 19 L 6 19 L 6 10.191406 L 12 4.7910156 z\"/></svg>\n        </Link>\n      </div>}\n      <div className={styles.searchWrapper}>\n        <input className={styles.inputBox} type=\"text\" onChange={e => updateInputVal(e.target.value)} />\n        <Link to={`/search?query=${inputVal}`} className={styles.searchBtn}>\n          Search\n        </Link>\n      </div>\n      <div className={styles.selectWrapper}>\n        <Select\n          value={langOption}\n          onChange={selectHandler}\n          options={languageOptions}\n          isSearchable\n        />\n      </div>\n      {pageType === \"home-page\" && geolocation.status === \"error\" && \n        <img src={weather} alt=\"Weather Icon\" title={getErrorMessage()} className={styles.weatherIcon} />}\n    </div>;\n};\n\nexport default Header;","import { UPDATE_LANGUAGE } from \"../constants\";\n\n/* Input: language object with two keys - code and name\n *   e.g. { code: \"en\", name: \"English\" }\n * Output: action object\n */\nexport const updateLanguage = language => ({\n  type: UPDATE_LANGUAGE,\n  payload: language\n});","import config from '../config/account_ids.json';\nimport { FORECAST_DEFAULT_HOUR } from '../constants.js';\n\n// Function to fetch data sending an api request\nexport const loadData = async (api) => {\n  try {\n    const data = await await((await fetch(api)).json());\n    if(data.errors) throw new Error(data.errors);\n    return data;\n  } catch(err) {\n    console.log(err);\n  }\n};\n\n// Function to get weather data given latitude and longitude\nexport const loadWeatherData = async (lat, lon) => {\n  const weatherApi = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${config['openweather_api_key']}`;\n  const weather = await loadData(weatherApi);\n  return weather;\n};\n\n// Function to get forecast data given latitude and longitude\nexport const loadForecastData = async (lat, lon) => {\n  const forecastApi = `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&units=metric&appid=${config['openweather_api_key']}`;\n  const forecast = await loadData(forecastApi);\n  return forecast;\n}\n\n// Function to get weather image source url given icon id\nexport const getWeatherImgSrc = iconId => {\n  return iconId ? `http://openweathermap.org/img/wn/${iconId}.png` : '';\n}\n\n// Function to get day on any given date\nexport const getDay = (date = \"\") => {\n  if(!date) return \"\";\n  const daysList = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n  const dayCode = new Date(date).getDay();\n  return daysList[dayCode];\n}\n\n// Function to get the closest number divisible by 3 customised for numbers limited to a 24 hour clock\n// e.g. this list [0, 3, 6, 9, 12, 15, 18, 21] \nconst getClosest = num => {\n  if(num % 3 === 0) return num;\n  const closestNum = num % 3 === 1 ? num - 1 : num + 1;\n  return closestNum === 24 ? 0 : closestNum; \n};\n\n// Function to filter the list based on your current hour of time\nexport const filterForecastList = (forecastList, currentHour = FORECAST_DEFAULT_HOUR) => {\n  return forecastList.filter(forecast => new Date(forecast[\"dt_txt\"]).getHours() === getClosest(currentHour));\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './separator.module.css';\n\n/* Renders a separator based on the type passed\n * Defaults to dot when type is not passed\n */ \nconst Separator = ({ type = \"dot\" }) => {\n  const getSeparator = () => {\n    switch(type) {\n      case 'dot': return '.';\n      case 'pipe': return '|';\n      default: return '.';\n    }\n  };\n  return <div id=\"separator\" className={styles.separator}>{getSeparator()}</div>;\n};\n\nSeparator.propTypes = {\n  type: PropTypes.string\n};\n\nexport default Separator;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TimeAgo from 'react-timeago';\nimport Separator from '../Separator';\nimport styles from './story-card.module.css';\n\n/* Renders a story card\n * Accepted props: story, opts, css\n *   story - story data object\n *   opts: {\n *     showImg: boolean value to define whether you want to show image\n *     showDescription: boolean value to define whether you want to show description\n *   }\n *   css: {\n *     align: to align story content  \n *   }\n */\nconst StoryCard = ({story, opts = {}, css = {}}) => {\n  if(!story) return null;\n\n  const { title, description, url, image, publishedAt, source: { name:srcName, url:srcUrl } } = story;\n  const { showImg = false, showDescription = false } = opts;\n  const { align = 'left' } = css;\n\n  return (<div className={`${styles.wrapper} ${styles[align]}`}>\n    <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n      {showImg && <img src={image} alt={title} />}\n      <h3 className={styles.title}>{title}</h3>\n      {showDescription && <div id=\"story-description\" className={styles.description}>{description}</div>}\n    </a>\n    <div className={styles.sourceWrapper}>\n      <a href={srcUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n        <div className={styles.srcName}>{srcName}</div>\n      </a>\n      <div className={styles.separator}>\n        <Separator />\n      </div>\n      <div className={styles.publishTime}>\n        <TimeAgo date={publishedAt} />\n      </div>\n    </div>\n  </div>);\n};\n\nStoryCard.propTypes = {\n  story: PropTypes.shape({\n    title: PropTypes.string, \n    description: PropTypes.string, \n    url: PropTypes.string, \n    image: PropTypes.string, \n    publishedAt: PropTypes.string, \n    source: PropTypes.shape({ \n      name: PropTypes.string, \n      url: PropTypes.string\n    })\n  }),\n  opts: PropTypes.shape({\n    showImg: PropTypes.bool,\n    showDescription: PropTypes.bool\n  }),\n  css: PropTypes.shape({\n    align: PropTypes.oneOf([\"left\", \"center\", \"right\"])\n  }),\n};\n\nexport default StoryCard; ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StoryCard from '../../Story-card';\n\nimport styles from './list-layout.module.css';\n\n/* Renders a list of Story cards in list format\n * Input: storiesList - list of stories/articles data\n */\nconst ListLayout = ({ storiesList = [] }) => {\n  return <div className={styles.wrapper}>\n      {storiesList.map((story, index) => <StoryCard story={story} key={`list-story-card-${index}`} />)}\n    </div>;\n};\n\nListLayout.propTypes = {\n  storiesList: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string, \n    description: PropTypes.string, \n    url: PropTypes.string, \n    image: PropTypes.string, \n    publishedAt: PropTypes.string, \n    source: PropTypes.shape({ \n      name: PropTypes.string, \n      url: PropTypes.string\n    })\n  }))\n};\n\nexport default ListLayout;","import { useLocation } from 'react-router';\n\n// Custom hook to get query string parameters\nconst useQueryParams = () => {\n  return new URLSearchParams(useLocation().search);\n};\n\nexport default useQueryParams;","import { UPDATE_PAGE_TYPE } from \"../constants\";\n\n\n/* Input: page type e.g. \"home-page\"\n * Output: action object\n */\nexport const updatePageType = pageType => ({\n  type: UPDATE_PAGE_TYPE,\n  payload: pageType\n});","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { loadData } from '../../../utils/utils';\nimport config from '../../../config/account_ids.json';\nimport ListLayout from './list-layout';\nimport useQueryParams from '../../../hooks/use-query-params';\nimport { updatePageType } from '../../../actions/page-type';\n\n// Container to pass news data to the ListLayout and render it\n// Fetches data based on search query and choosen language\nconst ListLayoutContainer = () => {\n  const [newsData, updateNewsData] = useState({});\n  const { code = \"en\" } = useSelector(state => (state.language || {}));\n  const dispatch = useDispatch();\n  const queryParams = useQueryParams();\n  const query = queryParams.get('query');\n\n  dispatch(updatePageType(\"search-page\"));\n\n  useEffect(() => {\n    const getData = async () => {\n      const api = `https://gnews.io/api/v3/search?q=${query}&lang=${code}&token=${config[\"gnews_api_key\"]}`;\n      const searchNewsData = await loadData(api);\n      searchNewsData && updateNewsData(searchNewsData);\n    };\n    getData();\n  }, [query, code]);\n\n  return <ListLayout storiesList={newsData.articles} />;\n};\n\nexport default ListLayoutContainer;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport StoryCard from '../../Story-card';\n\nimport styles from './rich-layout.module.css';\n\n/* Renders a list of Story cards in grid format with the top right slot reserved for a widget/card \n * Input: storiesList, SlotCardComponent\n *   storiesList - list of stories/articles data\n *   SlotCardComponent - Component to render in the available top right slot\n */\nconst RichLayout = ({ storiesList = [], SlotCardComponent }) => {\n  const geolocation = useSelector(state => state.geolocation);\n  const isGeolocationSuccess = geolocation && geolocation.status !== \"error\";\n\n  // If no geolocation access then pick 9 stories from the list for good UI\n  // Update this later when we have access to more stories\n  const updatedStoriesList = !isGeolocationSuccess ? storiesList.slice(0, 9) : storiesList;\n\n  return <div className={styles.wrapper}>\n    { isGeolocationSuccess && <div className={styles.slotWrapper}>\n      <SlotCardComponent />\n    </div>}\n    {updatedStoriesList.map((story, index) => <StoryCard story={story} key={`start-rich-story-card-${index}`} />)}\n  </div>;\n};\n\nRichLayout.propTypes = {\n  storiesList: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string, \n    description: PropTypes.string, \n    url: PropTypes.string, \n    image: PropTypes.string, \n    publishedAt: PropTypes.string, \n    source: PropTypes.shape({ \n      name: PropTypes.string, \n      url: PropTypes.string\n    })\n  })),\n  SlotCardComponent: PropTypes.func\n};\n\nexport default RichLayout;","import { GEOLOCATION_UPDATE_STATUS } from \"../constants\";\n\n\n/* Input: geolocation details object with two keys - status, error(in case stutus is error)\n *   e.g. { status: \"success\"}\n *    or  { status: \"error\", error: { code: 1, message: \"Permission Denied\" } }\n * Output: action object\n */\nexport const updateGeolocationStatus = payload => ({\n  type: GEOLOCATION_UPDATE_STATUS,\n  payload\n});","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getWeatherImgSrc, getDay, loadWeatherData, loadForecastData, filterForecastList } from '../../utils/utils';\nimport { FORECAST_LIMIT } from '../../constants.js';\nimport { updateGeolocationStatus } from '../../actions/geolocation.js';\n\nimport styles from './weather-card.module.css';\n\n\n// Renders weather card showing current weather details based on the geolocation\n// Shows next 4 days forecast details as well on desktop\nconst WeatherCard = () => {\n  const [coord, updateCoord] = useState({});\n  const [weatherData, updateWeatherData] = useState(null);\n  const [forecastData, updateForecastData] = useState(null);\n  const [geoAccess, updateGeoAccessStatus] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const successCallback = position => {\n      updateCoord({ lat: position.coords.latitude, lon: position.coords.longitude });\n      dispatch(updateGeolocationStatus({ status: \"success\" }));\n    };\n\n    const errorCallback = error => {\n      const { code, message } = error;\n      console.log(`ERROR(${code}): ${message}`);\n      updateGeoAccessStatus(false);\n      dispatch(updateGeolocationStatus({ \n        status: \"error\",\n        error: { code, message }\n      }));\n    };\n\n    // Function to get the user's geolocation\n    const getGeoLocation = () => {\n      if('geolocation' in navigator) {\n        // geolocation is available\n        updateGeoAccessStatus(true);\n        navigator.geolocation.getCurrentPosition(successCallback, errorCallback);\n      } else {\n        // geolocation is not available\n        console.log(\"Geolocation is not supported by your browser\");\n        updateGeoAccessStatus(false);\n        dispatch(updateGeolocationStatus({ \n          status: \"error\",\n          error: {\n            code: 0, \n            message: \"Geolocation is not supported by your browser\"\n          }\n        }));\n      }\n    };\n\n    getGeoLocation();\n  }, []);\n\n  useEffect(() => {\n    // Function to get data from weather apis and save in state\n    const getData = async (lat, lon) => {\n      const weather = await loadWeatherData(lat, lon);\n      const forecast = await loadForecastData(lat, lon);\n      updateWeatherData(weather);\n      updateForecastData(forecast);\n    };\n    coord.lat && coord.lon && getData(coord.lat, coord.lon);\n  }, [coord]);\n\n  // Function to return forecast ui single item\n  const forecastItem = (weatherData, today) => {\n    const { weather:[{ main, icon }], main: { temp_min:tempMin, temp_max:tempMax }, dt, dt_txt } = weatherData;\n    const day = today ? \"Today\" : getDay(dt_txt);\n    \n    return <div className={styles.itemWrapper} key={dt}>\n      <p className={styles.itemDate}>{day}</p>\n      <img src={getWeatherImgSrc(icon)} alt={main} />\n      <p className={styles.itemTemp}>{parseInt(tempMax)}&deg;C</p>\n      <p className={styles.itemTemp}>{parseInt(tempMin)}&deg;C</p>\n    </div>;\n  };\n\n  /* Returns null \n   * if error occurs while fetching geolocation or\n   * missing coordinates or \n   * weather data not available */\n  if(!geoAccess || !Object.keys(coord).length || !weatherData || !forecastData) return null;\n  \n  const { weather:[{ main }], main: { temp }, name, sys: {country}, dt } = weatherData;\n  const currentDateObj = new Date(dt * 1000);\n  const currentHour = currentDateObj.getHours();\n  const filteredForecastList = filterForecastList(forecastData.list, currentHour);\n  \n  return <div className={styles.wrapper}>\n    <div>\n      <div className={styles.place}>{`${name}, ${country}`}</div>\n      <p className={styles.date}>{currentDateObj.toDateString()}</p>\n      <div className={styles.status}>{main}</div>\n      <div className={styles.temp}>{temp} &deg;C</div>\n    </div>\n    <div className={styles.forecastWrapper}>\n      {forecastItem(weatherData, true)}\n      {filteredForecastList.slice(1, FORECAST_LIMIT).map((weatherData) => forecastItem(weatherData))}\n    </div>\n  </div>;\n};\n\nexport default WeatherCard;","import React, { useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\nimport RichLayout from './rich-layout';\nimport WeatherCard from '../../Weather-card';\nimport { loadData } from '../../../utils/utils';\nimport config from '../../../config/account_ids.json';\n\n// Container to pass news data to the RichLayout and render it with WeatherCard\n// Fetches data based on topic and choosen language\nconst RichLayoutContainer = () => {\n  const [newsData, updateNewsData] = useState({});\n  const { code = \"en\" } = useSelector(state => (state.language || {}));\n  const topic = useSelector(state => state.topic);\n\n  useEffect(() => {\n    const getData = async () => {\n      const topicPath = topic !== \"top-news\" ? \"/topics\": \"\";\n      const api = `https://gnews.io/api/v3${topicPath}/${topic}?lang=${code}&token=${config[\"gnews_api_key\"]}`;\n      const topNewsData = await loadData(api);\n      topNewsData && updateNewsData(topNewsData);\n    };\n    getData();\n  }, [code, topic]);\n\n  return <RichLayout storiesList={newsData.articles} SlotCardComponent={WeatherCard} />;\n};\n\nexport default RichLayoutContainer;","// Available topics list\nexport const topicsList = [\"world\", \"nation\", \"business\", \"technology\", \"entertainment\", \"sports\", \"science\", \"health\"];","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from './topics-bar.module.css';\nimport { topicsList } from './topics-list';\nimport { updateTopic } from '../../actions/topic';\n\n// Renders topics bar which is a list of topic buttons\nconst TopicsBar = () => {\n  const [activeTopic, updateActiveTopic] = useState('top-news');\n  const dispatch = useDispatch();\n\n  const clickHandler = e => {\n    updateActiveTopic(e.target.value);\n    dispatch(updateTopic(e.target.value));\n  };\n\n  const topicItem = topic => {\n    const topicLabel = topic.replace(\"-\", \" \");\n    return <button className={`${styles.topicBtn} ${topic === activeTopic ? styles.active : \"\"}`} onClick={clickHandler} key={topic} value={topic}>{topicLabel}</button>\n  };\n  \n  return <div className={styles.topicsWrapper}>\n    {topicItem(\"top-news\")}\n    {topicsList.map(topic => topicItem(topic))}\n  </div>\n};\n\nexport default TopicsBar;","import { UPDATE_TOPIC } from \"../constants\";\n\n/* Input: topic e.g. \"business\"\n * Output: action object\n */\nexport const updateTopic = topic => ({\n  type: UPDATE_TOPIC,\n  payload: topic\n});","import React from 'react';\nimport { useDispatch } from \"react-redux\";\nimport RichLayoutContainer from '../Story-layouts/Rich-layout';\nimport TopicsBar from '../Topics-bar';\nimport { updatePageType } from '../../actions/page-type';\n\n// Renders TopicsBar and RichLayoutContainer\nconst Home = () => {\n  const dispatch = useDispatch();\n  dispatch(updatePageType(\"home-page\"));\n\n  return <>\n    <TopicsBar />\n    <RichLayoutContainer />\n  </>;\n};\n\nexport default Home;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Header from '../Header';\nimport ListLayoutContainer from '../Story-layouts/List-layout';\nimport Home from '../Home';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Header />\n      <Switch>\n        <Route path=\"/search\" component={ListLayoutContainer} />\n        <Route path=\"/\" component={Home} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\nimport App from './components/App';\nimport './index.css';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}